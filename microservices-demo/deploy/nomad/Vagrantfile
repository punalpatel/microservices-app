# vi: set ft=ruby :
nomad_unit = <<-EOF
[Service]
ExecStart=/usr/bin/nomad agent -config /etc/nomad
[Install]
WantedBy=multi-user.target
EOF

nomad = <<-EOF
if [ -a /usr/bin/nomad ]; then
  echo nomad is already installed
else
  yum install -y unzip
  cd /tmp
  curl https://releases.hashicorp.com/nomad/0.4.0/nomad_0.4.0_linux_amd64.zip > nomad.zip
  unzip -d . nomad.zip
  chmod +x nomad
  mv nomad /usr/bin/nomad
  rm nomad.zip
  useradd -d /var/lib/nomad nomad
  usermod -a -G nomad vagrant
  chmod g+rw /var/lib/nomad
  mkdir -p /etc/nomad
  echo '#{nomad_unit}' > /usr/lib/systemd/system/nomad.service
  systemctl daemon-reload
  systemctl unmask nomad
  systemctl enable nomad
  sudo -u vagrant echo "export NOMAD_ADDR=http://192.168.59.101:4646" >> /home/vagrant/.bash_profile
fi
EOF

docker_daemon_config = %q{'{"cluster-store":"consul://192.168.59.101:8500"}'}
docker = <<-EOF
count=$(yum list installed | grep docker | wc -l)
if [ $count == 0 ]; then
  curl -fsSL https://get.docker.com/ | sh
  mkdir -p /etc/docker
  echo #{docker_daemon_config} > /etc/docker/daemon.json
  systemctl start docker
  usermod -a -G docker vagrant
else
  echo docker is already installed
fi
EOF

consul = <<-EOF
count=$(docker ps -q --filter name=consul | wc -l)
if [ $count == 0 ]; then
  docker run -d --name consul -p "8500:8500" --restart always progrium/consul -server -bootstrap
else
  echo consul is already running
fi
EOF

weave = <<-EOF
if [ -a /usr/bin/weave ]; then
  echo weave is already installed
else
  curl -L https://git.io/weave > /usr/bin/weave
  chmod +x /usr/bin/weave
fi
EOF

scope = <<-EOF
if [ -a /usr/bin/scope ]; then
  echo scope is already installed
else
  curl -L https://git.io/scope > /usr/bin/scope
  chmod +x /usr/bin/scope
fi
EOF

launch_weave = <<-EOF
count=$(docker ps -q -f name=weave$ | wc -l)
if [ $count -eq 0 ]; then
  /usr/bin/weave launch --ipalloc-init consensus=3
else
  echo weave is already running
  exit 0
fi
EOF

launch_scope = <<-EOF
count=$(docker ps -q -f name=weavescope | wc -l)
if [ $count -eq 0 ]; then
  /usr/bin/scope launch
else
  echo scope is already running
  exit 0
fi
EOF

create_networks = <<-EOF
for network in internal external secure backoffice; do
  if [ $(docker network ls | grep $network | wc -l) -eq 0 ]
  then
    docker network create -d weave $network
  else
    echo docker network $network already created
  fi
done
EOF

Vagrant.configure(2) do |config|
  config.vm.box = "centos/7"
  config.vm.provision "shell", inline: nomad
  config.vm.provision "shell", inline: docker
  config.vm.provision "shell", inline: weave
  config.vm.provision "shell", inline: scope

  config.vm.provider "virtualbox" do |vb|
    vb.memory = "6144"
  end

  (1..2).each do |n|
    ip = "192.168.59.10#{n}"
    name = "node#{n}"
    nomad_config = <<-EOF
    bind_addr = "#{ip}"
    data_dir = "/var/lib/nomad"
    EOF

    if name == "node1"
      nomad_config << <<-EOF
      server {
        enabled = true
        bootstrap_expect = 1
      }
      EOF
    else
      nomad_config << <<-EOF
      client {
        enabled = true
        network_interface = "eth1"
        servers = ["192.168.59.101"]
        options = {
          "driver.raw_exec.enable" = "1"
        }
      }
      EOF
    end


    config.vm.define name do |m|
      m.vm.hostname = name
      m.vm.network "private_network", ip: ip
      m.vm.provision "shell", inline: "echo '#{nomad_config}' > /etc/nomad/config.hcl"
      m.vm.provision "shell", inline: "systemctl start nomad"
      m.vm.provision "shell", inline: launch_weave
      m.vm.provision "shell", inline: launch_scope

      # Stuff only the head node should take care of
      if name == "node1"
        m.vm.provider "virtualbox" do |vb|
          vb.memory = "512"
        end

        m.vm.provision "shell", inline: consul
        m.vm.provision "shell", inline: create_networks
        m.vm.provision "file", source: "./jobs/netman.nomad", destination: "/home/vagrant/netman.nomad"
        m.vm.provision "file", source: "./jobs/weavedemo.nomad", destination: "/home/vagrant/weavedemo.nomad"
      else
        # Stuff the rest of the nodes should take care of
        m.vm.provision "shell", inline: "/usr/bin/weave connect 192.168.59.101"
        m.vm.provision "file", source: "./scripts/netman.sh", destination: "/tmp/netman"
        m.vm.provision "shell", inline: "mv /tmp/netman /usr/bin/netman"
      end
    end
  end # 1..3
end # Vagrantfile
